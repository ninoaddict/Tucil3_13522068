/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package word_ladder;

/**
 *
 * @author adril
 */

import java.util.List;

import javax.swing.*;

public class UserInterface extends javax.swing.JFrame {

  /**
   * Creates new form UserInterface
   */
  public UserInterface() {
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated
  // <editor-fold defaultstate="collapsed" desc="Generated
  // Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jPanel1 = new javax.swing.JPanel();
    title = new javax.swing.JLabel();
    startLabel = new javax.swing.JLabel();
    startTextField = new javax.swing.JTextField();
    endLabel = new javax.swing.JLabel();
    endTextField = new javax.swing.JTextField();
    algoSelect = new javax.swing.JComboBox<>();
    searchButton = new javax.swing.JButton();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setResizable(false);

    jPanel1.setBackground(new java.awt.Color(0, 51, 51));

    title.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
    title.setForeground(new java.awt.Color(240, 240, 240));
    title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    title.setText("Word Ladder Solver");

    startLabel.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
    startLabel.setForeground(new java.awt.Color(240, 240, 240));
    startLabel.setText("Start Word");

    startTextField.setBackground(new java.awt.Color(20, 20, 20));
    startTextField.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
    startTextField.setForeground(new java.awt.Color(240, 240, 240));
    startTextField.setText("base");
    startTextField.setBorder(BorderFactory.createEmptyBorder(2, 5, 2, 5));
    startTextField.setCaretColor(new java.awt.Color(240, 240, 240));

    endLabel.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
    endLabel.setForeground(new java.awt.Color(240, 240, 240));
    endLabel.setText("End Word");

    endTextField.setBackground(new java.awt.Color(20, 20, 20));
    endTextField.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
    endTextField.setForeground(new java.awt.Color(240, 240, 240));
    endTextField.setText("root");
    endTextField.setBorder(BorderFactory.createEmptyBorder(2, 5, 2, 5));
    endTextField.setCaretColor(new java.awt.Color(240, 240, 240));
    endTextField.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        endTextFieldActionPerformed(evt);
      }
    });

    algoSelect.setBackground(new java.awt.Color(20, 20, 20));
    algoSelect.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
    algoSelect.setForeground(new java.awt.Color(240, 240, 240));
    algoSelect.setModel(new javax.swing.DefaultComboBoxModel<>(
        new String[] { "Uniform Cost Search", "Best First Search", "A* Algorithm" }));
    algoSelect.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        algoSelectActionPerformed(evt);
      }
    });

    searchButton.setBackground(new java.awt.Color(51, 150, 0));
    searchButton.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
    searchButton.setForeground(new java.awt.Color(240, 240, 240));
    searchButton.setText("Search");
    searchButton.setToolTipText("");
    searchButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        searchButtonActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(226, 226, 226)
                        .addComponent(title))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(58, 58, 58)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(startLabel)
                            .addComponent(endLabel))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(startTextField)
                            .addComponent(endTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE))))
                .addContainerGap(141, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(algoSelect, javax.swing.GroupLayout.PREFERRED_SIZE,
                            javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(231, 231, 231))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(searchButton)
                        .addGap(285, 285, 285)))));
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(title)
                .addGap(26, 26, 26)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startLabel)
                    .addComponent(startTextField, javax.swing.GroupLayout.PREFERRED_SIZE,
                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(endLabel)
                    .addComponent(endTextField, javax.swing.GroupLayout.PREFERRED_SIZE,
                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(algoSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                    javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(searchButton)
                .addContainerGap(88, Short.MAX_VALUE)));

    title.setHorizontalAlignment(javax.swing.JLabel.CENTER);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                Short.MAX_VALUE));
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                Short.MAX_VALUE));

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void endTextFieldActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_endTextFieldActionPerformed
    // TODO add your handling code here:
  }// GEN-LAST:event_endTextFieldActionPerformed

  private void algoSelectActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_algoSelectActionPerformed
    // TODO add your handling code here:
  }// GEN-LAST:event_algoSelectActionPerformed

  private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_searchButtonActionPerformed
    // TODO add your handling code here:
    String startText = startTextField.getText().toLowerCase().trim();
    String endText = endTextField.getText().toLowerCase().trim();

    if (startText.equals("") || endText.equals("")) {
      JOptionPane.showMessageDialog(this, "Field can't be empty");
    }

    if (!Node.checkDictionary(startText)) {
      // TODO: handle
      JOptionPane.showMessageDialog(this, startText + " is not found");
      return;
    }

    if (!Node.checkDictionary(endText)) {
      // TODO: handle
      JOptionPane.showMessageDialog(this, endText + " is not found");
      return;
    }

    if (endText.length() != startText.length()) {
      JOptionPane.showMessageDialog(this, "The inputs must be of the same length");
      return;
    }

    int selectedIndex = algoSelect.getSelectedIndex();

    try {
      List<String> res;
      ResultInterface ri;
      long timestart = System.nanoTime();
      long timeend;
      switch (selectedIndex) {
        case 0:
          UCS ucs = new UCS();
          res = ucs.solveWordLadder(startText, endText);
          timeend = System.nanoTime();

          if (res.isEmpty()) {
            this.setEnabled(true);
            JOptionPane.showMessageDialog(this, "Solution not found!");
            return;
          }

          this.setEnabled(false);
          ri = new ResultInterface(this, res, ucs.getNumOfVisited(), (float) (timeend - timestart)/1000000);
          ri.setVisible(true);
          break;
        case 1:
          BFS bfs = new BFS();
          res = bfs.solveWordLadder(startText, endText);
          timeend = System.nanoTime();

          if (res.isEmpty()) {
            this.setEnabled(true);
            JOptionPane.showMessageDialog(this, "Solution not found!");
            return;
          }

          this.setEnabled(false);
          ri = new ResultInterface(this, res, bfs.getNumOfVisited(), (float) (timeend - timestart)/1000000);
          ri.setVisible(true);
          break;
        case 2:
          AStar astar = new AStar();
          res = astar.solveWordLadder(startText, endText);
          timeend = System.nanoTime();

          if (res.isEmpty()) {
            this.setEnabled(true);
            JOptionPane.showMessageDialog(this, "Solution not found!");
            return;
          }

          this.setEnabled(false);
          ri = new ResultInterface(this, res, astar.getNumOfVisited(), (float) (timeend - timestart)/1000000);
          ri.setVisible(true);
          break;
        default:
          break;
      }
    } catch (Exception e) {
      JOptionPane.showMessageDialog(this, "Solution not found!");
      e.printStackTrace();
      this.setEnabled(true);
      return;
    } 
  }// GEN-LAST:event_searchButtonActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    // <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
    // (optional) ">
    /*
     * If Nimbus (introduced in Java SE 6) is not available, stay with the default
     * look and feel.
     * For details see
     * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(UserInterface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    // </editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new UserInterface().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JComboBox<String> algoSelect;
  private javax.swing.JLabel endLabel;
  private javax.swing.JTextField endTextField;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JButton searchButton;
  private javax.swing.JLabel startLabel;
  private javax.swing.JTextField startTextField;
  private javax.swing.JLabel title;
  // End of variables declaration//GEN-END:variables
}
